// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using semestralni_Navratilova.Data;

#nullable disable

namespace semestralni_Navratilova.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("semestralni_Navratilova.Model.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AvailablePieces")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Binding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pages")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Translator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Molière",
                            AvailablePieces = 5,
                            Binding = "měkká / brožovaná",
                            Genre = "Literatura světová, Divadelní hry",
                            ISBN = "978-80-87128-02-2",
                            Language = "český",
                            Name = "Lakomec",
                            Pages = 88,
                            Publisher = "Artur",
                            Quantity = 5,
                            Translator = "Vladimír Mikeš",
                            Year = 2008
                        },
                        new
                        {
                            BookId = 2,
                            Author = "George Orwell",
                            AvailablePieces = 3,
                            Binding = "pevná / vázaná",
                            Genre = "Literatura světová, Romány, Sci-fi",
                            ISBN = "978-80-7335-647-7",
                            Language = "český",
                            Name = "1984",
                            Pages = 344,
                            Publisher = "Leda",
                            Quantity = 3,
                            Translator = "Jan Kalandra",
                            Year = 2021
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Antoine De Saint-Exupéry",
                            AvailablePieces = 0,
                            Binding = "měkká / brožovaná",
                            Genre = "Literatura světová, Pro děti a mládež, Sci-fi",
                            ISBN = "978-80-00-03424-9",
                            Language = "český",
                            Name = "Malý princ",
                            Pages = 96,
                            Publisher = "Albatros (ČR)",
                            Quantity = 0,
                            Translator = "Richard Podaný",
                            Year = 2014
                        });
                });

            modelBuilder.Entity("semestralni_Navratilova.Model.Borrowing", b =>
                {
                    b.Property<int>("BorrowingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BorrowingId"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBorrow")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfReturn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BorrowingId");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Borrowings");
                });

            modelBuilder.Entity("semestralni_Navratilova.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Birthday")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfRegistration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Adresse = "Ledecká 35, Plzeň",
                            Birthday = "13.12.1998",
                            DateOfRegistration = "17.5.2024",
                            Email = "deniska.navratilova13@gmail.com",
                            FirstName = "Denisa",
                            LastName = "Navrátilová",
                            PhoneNumber = "739300049"
                        });
                });

            modelBuilder.Entity("semestralni_Navratilova.Model.Borrowing", b =>
                {
                    b.HasOne("semestralni_Navratilova.Model.Book", "Book")
                        .WithMany("Borrowings")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("semestralni_Navratilova.Model.User", "User")
                        .WithMany("Borrowings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("semestralni_Navratilova.Model.Book", b =>
                {
                    b.Navigation("Borrowings");
                });

            modelBuilder.Entity("semestralni_Navratilova.Model.User", b =>
                {
                    b.Navigation("Borrowings");
                });
#pragma warning restore 612, 618
        }
    }
}
